name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      # Install Rust (uses the version in rust-toolchain file if present)
      - uses: dtolnay/rust-toolchain@stable

      # Build the project (adjust --release and target if necessary)
      - name: Build
        run: cargo build --release

      # Rename and prepare the binary for upload per OS
      - name: Prepare binary
        run: |
          BINARY_NAME="cast_model_viewer"
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv target/release/${BINARY_NAME}.exe ${BINARY_NAME}-windows.exe
            echo "ASSET=${BINARY_NAME}-windows.exe" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" = "macOS" ]; then
            mv target/release/${BINARY_NAME} ${BINARY_NAME}-macos
            echo "ASSET=${BINARY_NAME}-macos" >> $GITHUB_ENV
          else
            mv target/release/${BINARY_NAME} ${BINARY_NAME}-linux
            echo "ASSET=${BINARY_NAME}-linux" >> $GITHUB_ENV
          fi
        shell: bash

      # Upload the binary as a release asset
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
